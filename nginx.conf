events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Upstream servers
    upstream frontend {
        server frontend:80;
    }

    upstream backend {
        server backend:8000;
    }

    # HTTP server
    server {
        listen 80;
        server_name _;  # Replace _ with your domain: example.com www.example.com

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # For initial deployment without SSL, comment out the redirect below
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        # For initial deployment, use this instead:
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Backend API
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server (uncomment after obtaining SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name example.com www.example.com;  # Replace with your domain
    #
    #     # SSL configuration (update these paths after getting certificates)
    #     ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    #     # Security headers
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #
    #     # Frontend
    #     location / {
    #         proxy_pass http://frontend;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    #
    #     # Backend API
    #     location /api/ {
    #         proxy_pass http://backend/api/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    #
    #     # Static files
    #     location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    # }
}